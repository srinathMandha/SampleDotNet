name: CodeDeploy Test 

on:
  workflow_dispatch:

jobs:
  continuous-deployment:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      # Step 1: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::339712877925:role/CodeDeployRole
          aws-region: us-east-1

      # Step 2: Create CodeDeploy Deployment
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          echo "Creating CodeDeploy deployment..."
          DEPLOYMENT_ID=$(aws deploy create-deployment \
                          --application-name IISStopApp \
                          --deployment-group-name IISAppDeployment \
                          --deployment-config-name CodeDeployDefault.OneAtATime \
                          --github-location repository=${{ github.repository }},commitId=${{ github.sha }} \
                          --query "deploymentId" --output text)
          echo "Deployment created with ID: ${DEPLOYMENT_ID}"
          echo "::set-output name=deploymentId::${DEPLOYMENT_ID}"

      # Step 3: Wait for 5 seconds and check deployment status in a loop
      - name: Wait for deployment to complete
        id: wait-for-deployment
        run: |
          deployment_id=${{ steps.deploy.outputs.deploymentId }}
          while true; do
            DEPLOYMENT_STATUS=$(aws deploy get-deployment \
                                --deployment-id $deployment_id \
                                --query "deploymentInfo.status" --output text)
            echo "Deployment status: ${DEPLOYMENT_STATUS}"
            if [[ "${DEPLOYMENT_STATUS}" == "Succeeded" ]]; then
              echo "Deployment succeeded."
              break
            elif [[ "${DEPLOYMENT_STATUS}" == "Failed" ]]; then
              echo "Deployment failed."
              exit 1
            elif [[ "${DEPLOYMENT_STATUS}" == "Stopped" ]]; then
              echo "Deployment stopped."
              exit 1
            else
              echo "Deployment status: ${DEPLOYMENT_STATUS}. Waiting for 5 seconds before checking again..."
              sleep 5
            fi
          done
